{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\INFRAMINDS\\\\ChatBot\\\\frontend\\\\src\\\\LayoutCanvas.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Stage, Layer, Line, Text, Group, Rect, Transformer } from \"react-konva\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LayoutCanvas({\n  layout,\n  onUpdateRoom,\n  selectedRoom,\n  onSelectRoom,\n  onDeleteRoom\n}) {\n  _s2();\n  var _s = $RefreshSig$();\n  const width = 600,\n    height = 450;\n  const shapeRefs = useRef([]);\n  const trRef = useRef();\n\n  // Local state for hover (must be at the top, before any return)\n  const [hoveredIdx, setHoveredIdx] = useState(null);\n\n  // Filter out rooms with less than 3 points (invalid polygons)\n  const validRooms = layout.filter(room => room.points.length >= 3);\n\n  // Compute scaling and centering\n  const allPoints = validRooms.flatMap(room => room.points);\n  if (allPoints.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-400 text-lg\",\n      children: \"No valid rooms to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n  const xs = allPoints.map(p => p[0]);\n  const ys = allPoints.map(p => p[1]);\n  const minX = Math.min(...xs),\n    maxX = Math.max(...xs);\n  const minY = Math.min(...ys),\n    maxY = Math.max(...ys);\n\n  // Calculate scale to fit the canvas with some margin\n  const margin = 40;\n  const scale = Math.min((width - margin * 2) / (maxX - minX || 1), (height - margin * 2) / (maxY - minY || 1));\n  const offsetX = margin - minX * scale + (width - (maxX - minX) * scale) / 2 - margin;\n  const offsetY = margin - minY * scale + (height - (maxY - minY) * scale) / 2 - margin;\n\n  // Helper to get centroid for label placement\n  const getCentroid = points => {\n    const n = points.length;\n    const sum = points.reduce((acc, [x, y]) => [acc[0] + x, acc[1] + y], [0, 0]);\n    return [sum[0] / n, sum[1] / n];\n  };\n  const handleTransformEnd = idx => {\n    const shape = shapeRefs.current[idx];\n    if (!shape) return;\n    const box = shape.getClientRect();\n    // Calculate new points for a rectangle\n    const x = (box.x - offsetX) / scale;\n    const y = (box.y - offsetY) / scale;\n    const w = box.width / scale;\n    const h = box.height / scale;\n    const newPoints = [[x, y], [x + w, y], [x + w, y + h], [x, y + h]];\n    onUpdateRoom(idx, {\n      ...layout[idx],\n      points: newPoints\n    });\n  };\n\n  // Handle drag end: update room coordinates\n  const handleDragEnd = (idx, e) => {\n    _s();\n    const node = e.target;\n    const dx = node.x() / scale;\n    const dy = node.y() / scale;\n    const newPoints = layout[idx].points.map(([x, y]) => [x + dx, y + dy]);\n    node.position({\n      x: 0,\n      y: 0\n    });\n    useEffect(() => {\n      if (trRef.current && selectedRoom !== null && shapeRefs.current[selectedRoom]) {\n        trRef.current.nodes([shapeRefs.current[selectedRoom]]);\n        trRef.current.getLayer().batchDraw();\n      }\n    }, [selectedRoom, layout]);\n    if (onUpdateRoom) {\n      onUpdateRoom(idx, {\n        ...layout[idx],\n        points: newPoints\n      });\n    }\n  };\n  _s(handleDragEnd, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: width,\n    height: height,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: validRooms.map((room, idx) => {\n        // Scale and center points\n        const scaledPoints = room.points.flatMap(([x, y]) => [x * scale + offsetX, y * scale + offsetY]);\n        // Centroid for label\n        const [cx, cy] = getCentroid(room.points.map(([x, y]) => [x * scale + offsetX, y * scale + offsetY]));\n        const isSelected = selectedRoom === idx;\n        const isHovered = hoveredIdx === idx;\n\n        // Find top-right corner for delete icon\n        const xs = scaledPoints.filter((_, i) => i % 2 === 0);\n        const ys = scaledPoints.filter((_, i) => i % 2 === 1);\n        const topRightX = Math.max(...xs);\n        const topRightY = Math.min(...ys);\n        return /*#__PURE__*/_jsxDEV(Group, {\n          draggable: true,\n          onDragEnd: e => handleDragEnd(idx, e),\n          onMouseEnter: () => setHoveredIdx(idx),\n          onMouseLeave: () => setHoveredIdx(null),\n          onClick: () => onSelectRoom(idx),\n          onTap: () => onSelectRoom(idx),\n          children: [/*#__PURE__*/_jsxDEV(Line, {\n            points: scaledPoints,\n            closed: true,\n            fill: \"#e0e7ff\",\n            stroke: isSelected ? \"#f59e42\" : isHovered ? \"#2563eb\" : \"#1e293b\",\n            strokeWidth: isSelected ? 4 : isHovered ? 3 : 2,\n            shadowBlur: isSelected ? 8 : 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            text: room.name,\n            x: cx - room.name.length * 4,\n            y: cy - 8,\n            fontSize: 16,\n            fill: \"#1e293b\",\n            fontStyle: \"bold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), isSelected && onDeleteRoom && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Rect, {\n              x: topRightX - 10,\n              y: topRightY - 10,\n              width: 20,\n              height: 20,\n              fill: \"#f87171\",\n              cornerRadius: 4,\n              onClick: () => onDeleteRoom(idx),\n              onTap: () => onDeleteRoom(idx),\n              style: {\n                cursor: \"pointer\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              text: \"\\uD83D\\uDDD1\",\n              x: topRightX - 6,\n              y: topRightY - 10,\n              fontSize: 16,\n              onClick: () => onDeleteRoom(idx),\n              onTap: () => onDeleteRoom(idx),\n              style: {\n                cursor: \"pointer\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, room.name + idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s2(LayoutCanvas, \"Y0D2mO2EcfsZ3MZQGalK0MicEcU=\");\n_c = LayoutCanvas;\nvar _c;\n$RefreshReg$(_c, \"LayoutCanvas\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Stage","Layer","Line","Text","Group","Rect","Transformer","jsxDEV","_jsxDEV","Fragment","_Fragment","LayoutCanvas","layout","onUpdateRoom","selectedRoom","onSelectRoom","onDeleteRoom","_s2","_s","$RefreshSig$","width","height","shapeRefs","trRef","hoveredIdx","setHoveredIdx","validRooms","filter","room","points","length","allPoints","flatMap","className","children","fileName","_jsxFileName","lineNumber","columnNumber","xs","map","p","ys","minX","Math","min","maxX","max","minY","maxY","margin","scale","offsetX","offsetY","getCentroid","n","sum","reduce","acc","x","y","handleTransformEnd","idx","shape","current","box","getClientRect","w","h","newPoints","handleDragEnd","e","node","target","dx","dy","position","nodes","getLayer","batchDraw","scaledPoints","cx","cy","isSelected","isHovered","_","i","topRightX","topRightY","draggable","onDragEnd","onMouseEnter","onMouseLeave","onClick","onTap","closed","fill","stroke","strokeWidth","shadowBlur","text","name","fontSize","fontStyle","cornerRadius","style","cursor","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/INFRAMINDS/ChatBot/frontend/src/LayoutCanvas.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Stage, Layer, Line, Text, Group, Rect, Transformer } from \"react-konva\";\r\n\r\n\r\nexport default function LayoutCanvas({\r\n  layout,\r\n  onUpdateRoom,\r\n  selectedRoom,\r\n  onSelectRoom,\r\n  onDeleteRoom,\r\n}) {\r\n  const width = 600, height = 450;\r\n  const shapeRefs = useRef([]);\r\n  const trRef = useRef();\r\n\r\n  // Local state for hover (must be at the top, before any return)\r\n  const [hoveredIdx, setHoveredIdx] = useState(null);\r\n\r\n  // Filter out rooms with less than 3 points (invalid polygons)\r\n  const validRooms = layout.filter(room => room.points.length >= 3);\r\n\r\n  // Compute scaling and centering\r\n  const allPoints = validRooms.flatMap(room => room.points);\r\n  if (allPoints.length === 0) {\r\n    return (\r\n      <div className=\"text-gray-400 text-lg\">\r\n        No valid rooms to display.\r\n      </div>\r\n    );\r\n  }\r\n  const xs = allPoints.map(p => p[0]);\r\n  const ys = allPoints.map(p => p[1]);\r\n  const minX = Math.min(...xs), maxX = Math.max(...xs);\r\n  const minY = Math.min(...ys), maxY = Math.max(...ys);\r\n\r\n  // Calculate scale to fit the canvas with some margin\r\n  const margin = 40;\r\n  const scale = Math.min(\r\n    (width - margin * 2) / (maxX - minX || 1),\r\n    (height - margin * 2) / (maxY - minY || 1)\r\n  );\r\n  const offsetX = margin - minX * scale + (width - (maxX - minX) * scale) / 2 - margin;\r\n  const offsetY = margin - minY * scale + (height - (maxY - minY) * scale) / 2 - margin;\r\n\r\n  // Helper to get centroid for label placement\r\n  const getCentroid = (points) => {\r\n    const n = points.length;\r\n    const sum = points.reduce(\r\n      (acc, [x, y]) => [acc[0] + x, acc[1] + y],\r\n      [0, 0]\r\n    );\r\n    return [sum[0] / n, sum[1] / n];\r\n  };\r\nconst handleTransformEnd = (idx) => {\r\n  const shape = shapeRefs.current[idx];\r\n  if (!shape) return;\r\n  const box = shape.getClientRect();\r\n  // Calculate new points for a rectangle\r\n  const x = (box.x - offsetX) / scale;\r\n  const y = (box.y - offsetY) / scale;\r\n  const w = box.width / scale;\r\n  const h = box.height / scale;\r\n  const newPoints = [\r\n    [x, y],\r\n    [x + w, y],\r\n    [x + w, y + h],\r\n    [x, y + h],\r\n  ];\r\n  onUpdateRoom(idx, { ...layout[idx], points: newPoints });\r\n};\r\n\r\n  // Handle drag end: update room coordinates\r\n  const handleDragEnd = (idx, e) => {\r\n    const node = e.target;\r\n    const dx = node.x() / scale;\r\n    const dy = node.y() / scale;\r\n    const newPoints = layout[idx].points.map(([x, y]) => [x + dx, y + dy]);\r\n    node.position({ x: 0, y: 0 });\r\n    useEffect(() => {\r\n  if (trRef.current && selectedRoom !== null && shapeRefs.current[selectedRoom]) {\r\n    trRef.current.nodes([shapeRefs.current[selectedRoom]]);\r\n    trRef.current.getLayer().batchDraw();\r\n  }\r\n}, [selectedRoom, layout]);\r\n\r\n    if (onUpdateRoom) {\r\n      onUpdateRoom(idx, { ...layout[idx], points: newPoints });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stage width={width} height={height}>\r\n      <Layer>\r\n        {validRooms.map((room, idx) => {\r\n          // Scale and center points\r\n          const scaledPoints = room.points.flatMap(([x, y]) => [\r\n            x * scale + offsetX,\r\n            y * scale + offsetY,\r\n          ]);\r\n          // Centroid for label\r\n          const [cx, cy] = getCentroid(\r\n            room.points.map(([x, y]) => [\r\n              x * scale + offsetX,\r\n              y * scale + offsetY,\r\n            ])\r\n          );\r\n          const isSelected = selectedRoom === idx;\r\n          const isHovered = hoveredIdx === idx;\r\n\r\n          // Find top-right corner for delete icon\r\n          const xs = scaledPoints.filter((_, i) => i % 2 === 0);\r\n          const ys = scaledPoints.filter((_, i) => i % 2 === 1);\r\n          const topRightX = Math.max(...xs);\r\n          const topRightY = Math.min(...ys);\r\n\r\n          return (\r\n            <Group\r\n              key={room.name + idx}\r\n              draggable\r\n              onDragEnd={e => handleDragEnd(idx, e)}\r\n              onMouseEnter={() => setHoveredIdx(idx)}\r\n              onMouseLeave={() => setHoveredIdx(null)}\r\n              onClick={() => onSelectRoom(idx)}\r\n              onTap={() => onSelectRoom(idx)}\r\n            >\r\n              <Line\r\n                points={scaledPoints}\r\n                closed\r\n                fill=\"#e0e7ff\"\r\n                stroke={\r\n                  isSelected ? \"#f59e42\" : isHovered ? \"#2563eb\" : \"#1e293b\"\r\n                }\r\n                strokeWidth={isSelected ? 4 : isHovered ? 3 : 2}\r\n                shadowBlur={isSelected ? 8 : 0}\r\n              />\r\n              <Text\r\n                text={room.name}\r\n                x={cx - room.name.length * 4}\r\n                y={cy - 8}\r\n                fontSize={16}\r\n                fill=\"#1e293b\"\r\n                fontStyle=\"bold\"\r\n              />\r\n              {/* Delete button/icon */}\r\n              {isSelected && onDeleteRoom && (\r\n                <>\r\n                  <Rect\r\n                    x={topRightX - 10}\r\n                    y={topRightY - 10}\r\n                    width={20}\r\n                    height={20}\r\n                    fill=\"#f87171\"\r\n                    cornerRadius={4}\r\n                    onClick={() => onDeleteRoom(idx)}\r\n                    onTap={() => onDeleteRoom(idx)}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  />\r\n                  <Text\r\n                    text=\"🗑\"\r\n                    x={topRightX - 6}\r\n                    y={topRightY - 10}\r\n                    fontSize={16}\r\n                    onClick={() => onDeleteRoom(idx)}\r\n                    onTap={() => onDeleteRoom(idx)}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  />\r\n                </>\r\n              )}\r\n            </Group>\r\n          );\r\n        })}\r\n      </Layer>\r\n    </Stage>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAEC,IAAI,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGjF,eAAe,SAASC,YAAYA,CAAC;EACnCC,MAAM;EACNC,YAAY;EACZC,YAAY;EACZC,YAAY;EACZC;AACF,CAAC,EAAE;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACD,MAAMC,KAAK,GAAG,GAAG;IAAEC,MAAM,GAAG,GAAG;EAC/B,MAAMC,SAAS,GAAGxB,MAAM,CAAC,EAAE,CAAC;EAC5B,MAAMyB,KAAK,GAAGzB,MAAM,CAAC,CAAC;;EAEtB;EACA,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,MAAM6B,UAAU,GAAGd,MAAM,CAACe,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,CAACC,MAAM,IAAI,CAAC,CAAC;;EAEjE;EACA,MAAMC,SAAS,GAAGL,UAAU,CAACM,OAAO,CAACJ,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC;EACzD,IAAIE,SAAS,CAACD,MAAM,KAAK,CAAC,EAAE;IAC1B,oBACEtB,OAAA;MAAKyB,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAC;IAEvC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEV;EACA,MAAMC,EAAE,GAAGR,SAAS,CAACS,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC;EACnC,MAAMC,EAAE,GAAGX,SAAS,CAACS,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC;EACnC,MAAME,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGN,EAAE,CAAC;IAAEO,IAAI,GAAGF,IAAI,CAACG,GAAG,CAAC,GAAGR,EAAE,CAAC;EACpD,MAAMS,IAAI,GAAGJ,IAAI,CAACC,GAAG,CAAC,GAAGH,EAAE,CAAC;IAAEO,IAAI,GAAGL,IAAI,CAACG,GAAG,CAAC,GAAGL,EAAE,CAAC;;EAEpD;EACA,MAAMQ,MAAM,GAAG,EAAE;EACjB,MAAMC,KAAK,GAAGP,IAAI,CAACC,GAAG,CACpB,CAACzB,KAAK,GAAG8B,MAAM,GAAG,CAAC,KAAKJ,IAAI,GAAGH,IAAI,IAAI,CAAC,CAAC,EACzC,CAACtB,MAAM,GAAG6B,MAAM,GAAG,CAAC,KAAKD,IAAI,GAAGD,IAAI,IAAI,CAAC,CAC3C,CAAC;EACD,MAAMI,OAAO,GAAGF,MAAM,GAAGP,IAAI,GAAGQ,KAAK,GAAG,CAAC/B,KAAK,GAAG,CAAC0B,IAAI,GAAGH,IAAI,IAAIQ,KAAK,IAAI,CAAC,GAAGD,MAAM;EACpF,MAAMG,OAAO,GAAGH,MAAM,GAAGF,IAAI,GAAGG,KAAK,GAAG,CAAC9B,MAAM,GAAG,CAAC4B,IAAI,GAAGD,IAAI,IAAIG,KAAK,IAAI,CAAC,GAAGD,MAAM;;EAErF;EACA,MAAMI,WAAW,GAAIzB,MAAM,IAAK;IAC9B,MAAM0B,CAAC,GAAG1B,MAAM,CAACC,MAAM;IACvB,MAAM0B,GAAG,GAAG3B,MAAM,CAAC4B,MAAM,CACvB,CAACC,GAAG,EAAE,CAACC,CAAC,EAAEC,CAAC,CAAC,KAAK,CAACF,GAAG,CAAC,CAAC,CAAC,GAAGC,CAAC,EAAED,GAAG,CAAC,CAAC,CAAC,GAAGE,CAAC,CAAC,EACzC,CAAC,CAAC,EAAE,CAAC,CACP,CAAC;IACD,OAAO,CAACJ,GAAG,CAAC,CAAC,CAAC,GAAGD,CAAC,EAAEC,GAAG,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC;EACjC,CAAC;EACH,MAAMM,kBAAkB,GAAIC,GAAG,IAAK;IAClC,MAAMC,KAAK,GAAGzC,SAAS,CAAC0C,OAAO,CAACF,GAAG,CAAC;IACpC,IAAI,CAACC,KAAK,EAAE;IACZ,MAAME,GAAG,GAAGF,KAAK,CAACG,aAAa,CAAC,CAAC;IACjC;IACA,MAAMP,CAAC,GAAG,CAACM,GAAG,CAACN,CAAC,GAAGP,OAAO,IAAID,KAAK;IACnC,MAAMS,CAAC,GAAG,CAACK,GAAG,CAACL,CAAC,GAAGP,OAAO,IAAIF,KAAK;IACnC,MAAMgB,CAAC,GAAGF,GAAG,CAAC7C,KAAK,GAAG+B,KAAK;IAC3B,MAAMiB,CAAC,GAAGH,GAAG,CAAC5C,MAAM,GAAG8B,KAAK;IAC5B,MAAMkB,SAAS,GAAG,CAChB,CAACV,CAAC,EAAEC,CAAC,CAAC,EACN,CAACD,CAAC,GAAGQ,CAAC,EAAEP,CAAC,CAAC,EACV,CAACD,CAAC,GAAGQ,CAAC,EAAEP,CAAC,GAAGQ,CAAC,CAAC,EACd,CAACT,CAAC,EAAEC,CAAC,GAAGQ,CAAC,CAAC,CACX;IACDvD,YAAY,CAACiD,GAAG,EAAE;MAAE,GAAGlD,MAAM,CAACkD,GAAG,CAAC;MAAEjC,MAAM,EAAEwC;IAAU,CAAC,CAAC;EAC1D,CAAC;;EAEC;EACA,MAAMC,aAAa,GAAGA,CAACR,GAAG,EAAES,CAAC,KAAK;IAAArD,EAAA;IAChC,MAAMsD,IAAI,GAAGD,CAAC,CAACE,MAAM;IACrB,MAAMC,EAAE,GAAGF,IAAI,CAACb,CAAC,CAAC,CAAC,GAAGR,KAAK;IAC3B,MAAMwB,EAAE,GAAGH,IAAI,CAACZ,CAAC,CAAC,CAAC,GAAGT,KAAK;IAC3B,MAAMkB,SAAS,GAAGzD,MAAM,CAACkD,GAAG,CAAC,CAACjC,MAAM,CAACW,GAAG,CAAC,CAAC,CAACmB,CAAC,EAAEC,CAAC,CAAC,KAAK,CAACD,CAAC,GAAGe,EAAE,EAAEd,CAAC,GAAGe,EAAE,CAAC,CAAC;IACtEH,IAAI,CAACI,QAAQ,CAAC;MAAEjB,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,CAAC;IAC7B7D,SAAS,CAAC,MAAM;MAClB,IAAIwB,KAAK,CAACyC,OAAO,IAAIlD,YAAY,KAAK,IAAI,IAAIQ,SAAS,CAAC0C,OAAO,CAAClD,YAAY,CAAC,EAAE;QAC7ES,KAAK,CAACyC,OAAO,CAACa,KAAK,CAAC,CAACvD,SAAS,CAAC0C,OAAO,CAAClD,YAAY,CAAC,CAAC,CAAC;QACtDS,KAAK,CAACyC,OAAO,CAACc,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC;MACtC;IACF,CAAC,EAAE,CAACjE,YAAY,EAAEF,MAAM,CAAC,CAAC;IAEtB,IAAIC,YAAY,EAAE;MAChBA,YAAY,CAACiD,GAAG,EAAE;QAAE,GAAGlD,MAAM,CAACkD,GAAG,CAAC;QAAEjC,MAAM,EAAEwC;MAAU,CAAC,CAAC;IAC1D;EACF,CAAC;EAACnD,EAAA,CAhBIoD,aAAa;EAkBnB,oBACE9D,OAAA,CAACR,KAAK;IAACoB,KAAK,EAAEA,KAAM;IAACC,MAAM,EAAEA,MAAO;IAAAa,QAAA,eAClC1B,OAAA,CAACP,KAAK;MAAAiC,QAAA,EACHR,UAAU,CAACc,GAAG,CAAC,CAACZ,IAAI,EAAEkC,GAAG,KAAK;QAC7B;QACA,MAAMkB,YAAY,GAAGpD,IAAI,CAACC,MAAM,CAACG,OAAO,CAAC,CAAC,CAAC2B,CAAC,EAAEC,CAAC,CAAC,KAAK,CACnDD,CAAC,GAAGR,KAAK,GAAGC,OAAO,EACnBQ,CAAC,GAAGT,KAAK,GAAGE,OAAO,CACpB,CAAC;QACF;QACA,MAAM,CAAC4B,EAAE,EAAEC,EAAE,CAAC,GAAG5B,WAAW,CAC1B1B,IAAI,CAACC,MAAM,CAACW,GAAG,CAAC,CAAC,CAACmB,CAAC,EAAEC,CAAC,CAAC,KAAK,CAC1BD,CAAC,GAAGR,KAAK,GAAGC,OAAO,EACnBQ,CAAC,GAAGT,KAAK,GAAGE,OAAO,CACpB,CACH,CAAC;QACD,MAAM8B,UAAU,GAAGrE,YAAY,KAAKgD,GAAG;QACvC,MAAMsB,SAAS,GAAG5D,UAAU,KAAKsC,GAAG;;QAEpC;QACA,MAAMvB,EAAE,GAAGyC,YAAY,CAACrD,MAAM,CAAC,CAAC0D,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrD,MAAM5C,EAAE,GAAGsC,YAAY,CAACrD,MAAM,CAAC,CAAC0D,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrD,MAAMC,SAAS,GAAG3C,IAAI,CAACG,GAAG,CAAC,GAAGR,EAAE,CAAC;QACjC,MAAMiD,SAAS,GAAG5C,IAAI,CAACC,GAAG,CAAC,GAAGH,EAAE,CAAC;QAEjC,oBACElC,OAAA,CAACJ,KAAK;UAEJqF,SAAS;UACTC,SAAS,EAAEnB,CAAC,IAAID,aAAa,CAACR,GAAG,EAAES,CAAC,CAAE;UACtCoB,YAAY,EAAEA,CAAA,KAAMlE,aAAa,CAACqC,GAAG,CAAE;UACvC8B,YAAY,EAAEA,CAAA,KAAMnE,aAAa,CAAC,IAAI,CAAE;UACxCoE,OAAO,EAAEA,CAAA,KAAM9E,YAAY,CAAC+C,GAAG,CAAE;UACjCgC,KAAK,EAAEA,CAAA,KAAM/E,YAAY,CAAC+C,GAAG,CAAE;UAAA5B,QAAA,gBAE/B1B,OAAA,CAACN,IAAI;YACH2B,MAAM,EAAEmD,YAAa;YACrBe,MAAM;YACNC,IAAI,EAAC,SAAS;YACdC,MAAM,EACJd,UAAU,GAAG,SAAS,GAAGC,SAAS,GAAG,SAAS,GAAG,SAClD;YACDc,WAAW,EAAEf,UAAU,GAAG,CAAC,GAAGC,SAAS,GAAG,CAAC,GAAG,CAAE;YAChDe,UAAU,EAAEhB,UAAU,GAAG,CAAC,GAAG;UAAE;YAAAhD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACF9B,OAAA,CAACL,IAAI;YACHiG,IAAI,EAAExE,IAAI,CAACyE,IAAK;YAChB1C,CAAC,EAAEsB,EAAE,GAAGrD,IAAI,CAACyE,IAAI,CAACvE,MAAM,GAAG,CAAE;YAC7B8B,CAAC,EAAEsB,EAAE,GAAG,CAAE;YACVoB,QAAQ,EAAE,EAAG;YACbN,IAAI,EAAC,SAAS;YACdO,SAAS,EAAC;UAAM;YAAApE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC,EAED6C,UAAU,IAAInE,YAAY,iBACzBR,OAAA,CAAAE,SAAA;YAAAwB,QAAA,gBACE1B,OAAA,CAACH,IAAI;cACHsD,CAAC,EAAE4B,SAAS,GAAG,EAAG;cAClB3B,CAAC,EAAE4B,SAAS,GAAG,EAAG;cAClBpE,KAAK,EAAE,EAAG;cACVC,MAAM,EAAE,EAAG;cACX2E,IAAI,EAAC,SAAS;cACdQ,YAAY,EAAE,CAAE;cAChBX,OAAO,EAAEA,CAAA,KAAM7E,YAAY,CAAC8C,GAAG,CAAE;cACjCgC,KAAK,EAAEA,CAAA,KAAM9E,YAAY,CAAC8C,GAAG,CAAE;cAC/B2C,KAAK,EAAE;gBAAEC,MAAM,EAAE;cAAU;YAAE;cAAAvE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CAAC,eACF9B,OAAA,CAACL,IAAI;cACHiG,IAAI,EAAC,cAAI;cACTzC,CAAC,EAAE4B,SAAS,GAAG,CAAE;cACjB3B,CAAC,EAAE4B,SAAS,GAAG,EAAG;cAClBc,QAAQ,EAAE,EAAG;cACbT,OAAO,EAAEA,CAAA,KAAM7E,YAAY,CAAC8C,GAAG,CAAE;cACjCgC,KAAK,EAAEA,CAAA,KAAM9E,YAAY,CAAC8C,GAAG,CAAE;cAC/B2C,KAAK,EAAE;gBAAEC,MAAM,EAAE;cAAU;YAAE;cAAAvE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CAAC;UAAA,eACF,CACH;QAAA,GAlDIV,IAAI,CAACyE,IAAI,GAAGvC,GAAG;UAAA3B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmDf,CAAC;MAEZ,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACrB,GAAA,CA1KuBN,YAAY;AAAAgG,EAAA,GAAZhG,YAAY;AAAA,IAAAgG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}