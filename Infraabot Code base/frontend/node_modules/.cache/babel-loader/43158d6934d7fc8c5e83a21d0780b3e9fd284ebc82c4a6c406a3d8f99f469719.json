{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\INFRAMINDS\\\\ChatBot\\\\frontend\\\\src\\\\components\\\\ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LayoutSection from \"./LayoutSection\";\n\n// Helper: Normalize layout to fit the plot area\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction normalizeLayoutToPlot(layout, plotWidth, plotHeight) {\n  if (!layout.length) return [];\n  const allPoints = layout.flatMap(room => room.points);\n  const xs = allPoints.map(([x, y]) => x);\n  const ys = allPoints.map(([x, y]) => y);\n  const minX = Math.min(...xs),\n    maxX = Math.max(...xs);\n  const minY = Math.min(...ys),\n    maxY = Math.max(...ys);\n  const layoutWidth = maxX - minX || 1;\n  const layoutHeight = maxY - minY || 1;\n  return layout.map(room => ({\n    ...room,\n    points: room.points.map(([x, y]) => [(x - minX) / layoutWidth * plotWidth, (y - minY) / layoutHeight * plotHeight])\n  }));\n}\nfunction ChatPage() {\n  _s();\n  const {\n    conversationId\n  } = useParams();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Layout state and handlers\n  const [layout, setLayout] = useState([]);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [plotDimensions, setPlotDimensions] = useState({\n    width: 1000,\n    height: 800\n  });\n\n  // Handler to update room after drag/resize\n  const handleUpdateRoom = (idx, updatedRoom) => {\n    setLayout(layout.map((room, i) => i === idx ? updatedRoom : room));\n  };\n  const handleSelectRoom = idx => {\n    setSelectedRoom(idx);\n  };\n  const handleDeleteRoom = idx => {\n    setLayout(layout.filter((_, i) => i !== idx));\n    setSelectedRoom(null);\n  };\n\n  // Add Room button handler\n  const handleAddRoom = () => {\n    const newRoom = {\n      name: `room${layout.length + 1}`,\n      points: [[100, 100], [200, 100], [200, 200], [100, 200]]\n    };\n    setLayout([...layout, newRoom]);\n  };\n\n  // Fetch chat history and latest layout on mount or when plotDimensions change\n  useEffect(() => {\n    // Fetch messages\n    axios.get(`http://127.0.0.1:8000/conversations/${conversationId}/messages`).then(res => setMessages(res.data)).catch(() => setMessages([]));\n    // Fetch latest layout snapshot\n    axios.get(`http://127.0.0.1:8000/conversations/${conversationId}/snapshots`).then(res => {\n      if (res.data.length > 0) {\n        const latest = res.data[res.data.length - 1];\n        setLayout(normalizeLayoutToPlot(JSON.parse(latest.layout_data), plotDimensions.width, plotDimensions.height));\n      } else {\n        setLayout([]);\n      }\n    }).catch(() => setLayout([]));\n    setSelectedRoom(null);\n  }, [conversationId, plotDimensions.width, plotDimensions.height]);\n\n  // Handle sending a message\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    setLoading(true);\n\n    // Add user message locally\n    setMessages(msgs => [...msgs, {\n      id: Date.now(),\n      user_id: 1,\n      conversation_id: Number(conversationId),\n      message: input,\n      response: \"\",\n      timestamp: new Date().toISOString()\n    }]);\n    try {\n      // Send to backend\n      const res = await axios.post(\"http://127.0.0.1:8000/chat\", {\n        prompt: input,\n        user_id: 1,\n        conversation_id: Number(conversationId)\n      });\n      // Add bot response\n      setMessages(msgs => [...msgs.slice(0, -1), {\n        ...msgs[msgs.length - 1],\n        response: res.data.response\n      }]);\n      // Normalize layout only when new layout is generated\n      setLayout(normalizeLayoutToPlot(res.data.layout || [], plotDimensions.width, plotDimensions.height));\n\n      // Save layout snapshot\n      await axios.post(\"http://127.0.0.1:8000/snapshots\", {\n        conversation_id: Number(conversationId),\n        layout_data: JSON.stringify(res.data.layout || [])\n      });\n    } catch (err) {\n      setMessages(msgs => [...msgs, {\n        id: Date.now() + 1,\n        user_id: 0,\n        conversation_id: Number(conversationId),\n        message: \"\",\n        response: \"Error: Could not reach backend.\",\n        timestamp: new Date().toISOString()\n      }]);\n    }\n    setInput(\"\");\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/3 border-r border-gray-200 flex flex-col bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"m-4 px-3 py-1 bg-gray-200 rounded text-sm\",\n        onClick: () => navigate(\"/\"),\n        children: \"\\u2190 Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold m-4\",\n        children: \"Infraabot Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto p-4 space-y-2\",\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 rounded bg-blue-100 text-right ml-8\",\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), msg.response && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 rounded bg-gray-100 text-left mr-8\",\n            children: msg.response\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-400\",\n          children: \"Infraabot is typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"p-4 flex gap-2 border-t\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"flex-1 border rounded px-2 py-1\",\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your message...\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-600 text-white px-4 py-1 rounded disabled:opacity-50\",\n          type: \"submit\",\n          disabled: loading || !input.trim(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-t\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-600 text-white px-4 py-1 rounded\",\n          onClick: handleAddRoom,\n          children: \"Add Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"p-4 border-t flex gap-2\",\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Plot Width:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: plotDimensions.width,\n            onChange: e => setPlotDimensions({\n              ...plotDimensions,\n              width: Number(e.target.value)\n            }),\n            className: \"border rounded px-2 py-1 ml-1 w-20\",\n            min: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Plot Height:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: plotDimensions.height,\n            onChange: e => setPlotDimensions({\n              ...plotDimensions,\n              height: Number(e.target.value)\n            }),\n            className: \"border rounded px-2 py-1 ml-1 w-20\",\n            min: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-2/3 flex flex-col bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(LayoutSection, {\n        layout: layout,\n        plotDimensions: plotDimensions,\n        onUpdateRoom: handleUpdateRoom,\n        selectedRoom: selectedRoom,\n        onSelectRoom: handleSelectRoom,\n        onDeleteRoom: handleDeleteRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"siWVh+0rGYI/9DwtGxULtZ2VFQM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","LayoutSection","jsxDEV","_jsxDEV","normalizeLayoutToPlot","layout","plotWidth","plotHeight","length","allPoints","flatMap","room","points","xs","map","x","y","ys","minX","Math","min","maxX","max","minY","maxY","layoutWidth","layoutHeight","ChatPage","_s","conversationId","navigate","messages","setMessages","input","setInput","loading","setLoading","setLayout","selectedRoom","setSelectedRoom","plotDimensions","setPlotDimensions","width","height","handleUpdateRoom","idx","updatedRoom","i","handleSelectRoom","handleDeleteRoom","filter","_","handleAddRoom","newRoom","name","get","then","res","data","catch","latest","JSON","parse","layout_data","handleSendMessage","e","preventDefault","trim","msgs","id","Date","now","user_id","conversation_id","Number","message","response","timestamp","toISOString","post","prompt","slice","stringify","err","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","msg","Fragment","onSubmit","type","value","onChange","target","placeholder","disabled","onUpdateRoom","onSelectRoom","onDeleteRoom","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/INFRAMINDS/ChatBot/frontend/src/components/ChatPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport LayoutSection from \"./LayoutSection\";\r\n\r\n// Helper: Normalize layout to fit the plot area\r\nfunction normalizeLayoutToPlot(layout, plotWidth, plotHeight) {\r\n  if (!layout.length) return [];\r\n  const allPoints = layout.flatMap(room => room.points);\r\n  const xs = allPoints.map(([x, y]) => x);\r\n  const ys = allPoints.map(([x, y]) => y);\r\n  const minX = Math.min(...xs), maxX = Math.max(...xs);\r\n  const minY = Math.min(...ys), maxY = Math.max(...ys);\r\n\r\n  const layoutWidth = maxX - minX || 1;\r\n  const layoutHeight = maxY - minY || 1;\r\n\r\n  return layout.map(room => ({\r\n    ...room,\r\n    points: room.points.map(([x, y]) => [\r\n      ((x - minX) / layoutWidth) * plotWidth,\r\n      ((y - minY) / layoutHeight) * plotHeight,\r\n    ]),\r\n  }));\r\n}\r\n\r\nfunction ChatPage() {\r\n  const { conversationId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Layout state and handlers\r\n  const [layout, setLayout] = useState([]);\r\n  const [selectedRoom, setSelectedRoom] = useState(null);\r\n  const [plotDimensions, setPlotDimensions] = useState({ width: 1000, height: 800 });\r\n\r\n  // Handler to update room after drag/resize\r\n  const handleUpdateRoom = (idx, updatedRoom) => {\r\n    setLayout(layout.map((room, i) => (i === idx ? updatedRoom : room)));\r\n  };\r\n\r\n  const handleSelectRoom = (idx) => {\r\n    setSelectedRoom(idx);\r\n  };\r\n\r\n  const handleDeleteRoom = (idx) => {\r\n    setLayout(layout.filter((_, i) => i !== idx));\r\n    setSelectedRoom(null);\r\n  };\r\n\r\n  // Add Room button handler\r\n  const handleAddRoom = () => {\r\n    const newRoom = {\r\n      name: `room${layout.length + 1}`,\r\n      points: [\r\n        [100, 100],\r\n        [200, 100],\r\n        [200, 200],\r\n        [100, 200],\r\n      ],\r\n    };\r\n    setLayout([...layout, newRoom]);\r\n  };\r\n\r\n  // Fetch chat history and latest layout on mount or when plotDimensions change\r\n  useEffect(() => {\r\n    // Fetch messages\r\n    axios.get(`http://127.0.0.1:8000/conversations/${conversationId}/messages`)\r\n      .then(res => setMessages(res.data))\r\n      .catch(() => setMessages([]));\r\n    // Fetch latest layout snapshot\r\n    axios.get(`http://127.0.0.1:8000/conversations/${conversationId}/snapshots`)\r\n      .then(res => {\r\n        if (res.data.length > 0) {\r\n          const latest = res.data[res.data.length - 1];\r\n          setLayout(normalizeLayoutToPlot(JSON.parse(latest.layout_data), plotDimensions.width, plotDimensions.height));\r\n        } else {\r\n          setLayout([]);\r\n        }\r\n      })\r\n      .catch(() => setLayout([]));\r\n    setSelectedRoom(null);\r\n  }, [conversationId, plotDimensions.width, plotDimensions.height]);\r\n\r\n  // Handle sending a message\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n    setLoading(true);\r\n\r\n    // Add user message locally\r\n    setMessages(msgs => [\r\n      ...msgs,\r\n      {\r\n        id: Date.now(),\r\n        user_id: 1,\r\n        conversation_id: Number(conversationId),\r\n        message: input,\r\n        response: \"\",\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    ]);\r\n\r\n    try {\r\n      // Send to backend\r\n      const res = await axios.post(\"http://127.0.0.1:8000/chat\", {\r\n        prompt: input,\r\n        user_id: 1,\r\n        conversation_id: Number(conversationId)\r\n      });\r\n      // Add bot response\r\n      setMessages(msgs => [\r\n        ...msgs.slice(0, -1),\r\n        {\r\n          ...msgs[msgs.length - 1],\r\n          response: res.data.response\r\n        }\r\n      ]);\r\n      // Normalize layout only when new layout is generated\r\n      setLayout(normalizeLayoutToPlot(res.data.layout || [], plotDimensions.width, plotDimensions.height));\r\n\r\n      // Save layout snapshot\r\n      await axios.post(\"http://127.0.0.1:8000/snapshots\", {\r\n        conversation_id: Number(conversationId),\r\n        layout_data: JSON.stringify(res.data.layout || [])\r\n      });\r\n\r\n    } catch (err) {\r\n      setMessages(msgs => [\r\n        ...msgs,\r\n        {\r\n          id: Date.now() + 1,\r\n          user_id: 0,\r\n          conversation_id: Number(conversationId),\r\n          message: \"\",\r\n          response: \"Error: Could not reach backend.\",\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      ]);\r\n    }\r\n\r\n    setInput(\"\");\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      {/* Left: Chat Window */}\r\n      <div className=\"w-1/3 border-r border-gray-200 flex flex-col bg-white\">\r\n        <button\r\n          className=\"m-4 px-3 py-1 bg-gray-200 rounded text-sm\"\r\n          onClick={() => navigate(\"/\")}\r\n        >\r\n          ← Back to Dashboard\r\n        </button>\r\n        <h2 className=\"text-2xl font-bold m-4\">Infraabot Chat</h2>\r\n        <div className=\"flex-1 overflow-y-auto p-4 space-y-2\">\r\n          {messages.map((msg, idx) => (\r\n            <React.Fragment key={idx}>\r\n              <div className=\"p-2 rounded bg-blue-100 text-right ml-8\">{msg.message}</div>\r\n              {msg.response && (\r\n                <div className=\"p-2 rounded bg-gray-100 text-left mr-8\">{msg.response}</div>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n          {loading && <div className=\"text-gray-400\">Infraabot is typing...</div>}\r\n        </div>\r\n        <form onSubmit={handleSendMessage} className=\"p-4 flex gap-2 border-t\">\r\n          <input\r\n            className=\"flex-1 border rounded px-2 py-1\"\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={e => setInput(e.target.value)}\r\n            placeholder=\"Type your message...\"\r\n            disabled={loading}\r\n          />\r\n          <button\r\n            className=\"bg-blue-600 text-white px-4 py-1 rounded disabled:opacity-50\"\r\n            type=\"submit\"\r\n            disabled={loading || !input.trim()}\r\n          >\r\n            Send\r\n          </button>\r\n        </form>\r\n        <div className=\"p-4 border-t\">\r\n          <button\r\n            className=\"bg-green-600 text-white px-4 py-1 rounded\"\r\n            onClick={handleAddRoom}\r\n          >\r\n            Add Room\r\n          </button>\r\n        </div>\r\n        {/* Plot area input */}\r\n        <form className=\"p-4 border-t flex gap-2\" onSubmit={e => e.preventDefault()}>\r\n          <label>\r\n            Plot Width:\r\n            <input\r\n              type=\"number\"\r\n              value={plotDimensions.width}\r\n              onChange={e =>\r\n                setPlotDimensions({ ...plotDimensions, width: Number(e.target.value) })\r\n              }\r\n              className=\"border rounded px-2 py-1 ml-1 w-20\"\r\n              min={100}\r\n            />\r\n          </label>\r\n          <label>\r\n            Plot Height:\r\n            <input\r\n              type=\"number\"\r\n              value={plotDimensions.height}\r\n              onChange={e =>\r\n                setPlotDimensions({ ...plotDimensions, height: Number(e.target.value) })\r\n              }\r\n              className=\"border rounded px-2 py-1 ml-1 w-20\"\r\n              min={100}\r\n            />\r\n          </label>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Right: Layout & Report Tabs */}\r\n      <div className=\"w-2/3 flex flex-col bg-gray-50\">\r\n        <LayoutSection\r\n          layout={layout}\r\n          plotDimensions={plotDimensions}\r\n          onUpdateRoom={handleUpdateRoom}\r\n          selectedRoom={selectedRoom}\r\n          onSelectRoom={handleSelectRoom}\r\n          onDeleteRoom={handleDeleteRoom}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}